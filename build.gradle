plugins{
    id 'groovy'
    id 'wrapper'
    id 'java-gradle-plugin'
}

def integrationTest = sourceSets.create("integrationTest")

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.4.15'
    testImplementation 'junit:junit:4.13'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.2"
    integrationTestImplementation gradleTestKit()
    integrationTestImplementation 'junit:junit:4.13'
    integrationTestRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.2"
}

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
        // publishAlways()
    }
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'org.boblloyd.GradleProjectReport'
            implementationClass = 'org.boblloyd.gradleprojectreport.ProjectReport'
        }
    }
    testSourceSets sourceSets.integrationTest
}

tasks.register('integrationTest')

// This code gets the list of Gradle versions for a specific major release, so we
//  can create integrationTest tasks for them
def get = new URL("https://services.gradle.org/distributions/").openConnection();
def getRC = get.getResponseCode();
def versions = []
if (getRC.equals(200)) {
    String stream = get.getInputStream().getText()
    def lines = stream.split('\n')
    lines.each{line ->
        if(line.startsWith('<span class="name">gradle-')){
            if(!line.contains('-rc') && !line.contains('milestone') && line.contains('gradle-7.')){
                gradleVersion = line.split('-')[1]
                gradleVersions.add(version)
            }
        }
    }
}
gradleVersions.unique()
gradleVersions.each{ gradleVersion ->
    tasks.register("integrationTest-${gradleVersion}", Test) {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath

        systemProperty "gradleVersion", gradleVersion
    }
    tasks.integrationTest.dependsOn("integrationTest-${gradleVersion}")
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

check.dependsOn "integrationTest"